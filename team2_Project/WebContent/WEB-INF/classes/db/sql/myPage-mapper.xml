<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="selectFollowerList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		FROM (
		SELECT
		M1.MEM_NO "MEM_NO", M1.MEM_ID "LOGIN_ID",
		M2.MEM_ID "FOLLOWERS"
		FROM
		TB_FOLLOW F
		JOIN TB_MEMBER M1 ON (FOLLOWER_ID= M1.MEM_NO)
		JOIN TB_MEMBER
		M2 ON (FOLLOWING_ID = M2.MEM_NO)
		WHERE M1.MEM_NO = ?
		AND F.ACT_YN = 'Y')
		A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>

	<entry key="selectFollowerCount">
		SELECT COUNT(*) COUNT
		FROM (SELECT M1.MEM_NO "MEM_NO",
		M1.MEM_ID "LOGIN_ID",
		M2.MEM_ID "FOLLOWERS"
		FROM TB_FOLLOW F
		JOIN
		TB_MEMBER M1 ON (FOLLOWER_ID= M1.MEM_NO)
		JOIN TB_MEMBER M2 ON
		(FOLLOWING_ID = M2.MEM_NO)
		WHERE M1.MEM_NO = ?
		AND F.ACT_YN = 'Y')
	</entry>



	<entry key="selectFollowingList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		FROM (
		SELECT
		M1.MEM_NO "MEM_NO", M1.MEM_ID "LOGIN_ID",
		M2.MEM_ID "FOLLOWING"
		FROM
		TB_FOLLOW F
		JOIN TB_MEMBER M1 ON
		(FOLLOWING_ID = M1.MEM_NO)
		JOIN
		TB_MEMBER M2 ON (FOLLOWER_ID =
		M2.MEM_NO)
		WHERE M1.MEM_NO = ?
		AND
		F.ACT_YN = 'Y') A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>


	<entry key="selectFollowingCount">
		SELECT COUNT(*) COUNT
		FROM ( SELECT M1.MEM_NO "MEM_NO",
		M1.MEM_ID "LOGIN_ID",
		M2.MEM_ID
		"FOLLOWING"
		FROM TB_FOLLOW F
		JOIN
		TB_MEMBER M1 ON
		(FOLLOWING_ID =
		M1.MEM_NO)
		JOIN TB_MEMBER M2 ON
		(FOLLOWER_ID =
		M2.MEM_NO)
		WHERE M1.MEM_NO = ?
		AND F.ACT_YN = 'Y')
	</entry>


	<entry key="deleteFollowing">
		UPDATE (
		SELECT M1.MEM_NO, M2.MEM_ID, F.ACT_YN
		FROM
		TB_MEMBER M1, TB_MEMBER M2, TB_FOLLOW F
		WHERE M1.MEM_NO =
		F.FOLLOWING_ID
		AND M2.MEM_NO = F.FOLLOWER_ID
		AND M1.MEM_NO = ?
		AND
		M2.MEM_ID = ?
		)
		SET ACT_YN ='N'

	</entry>


	<entry key="deleteFollower">

		UPDATE (
		SELECT M1.MEM_NO, M2.MEM_ID, F.ACT_YN
		FROM
		TB_MEMBER M1, TB_MEMBER M2, TB_FOLLOW F
		WHERE M1.MEM_NO =
		F.FOLLOWING_ID
		AND M2.MEM_NO= F.FOLLOWER_ID
		AND M2.MEM_NO = ?
		AND
		M1.MEM_ID = ?
		)
		SET ACT_YN ='N'
	</entry>

	<entry key="cancelDeleteFollowing">
		UPDATE (
		SELECT M1.MEM_NO, M2.MEM_ID, F.ACT_YN
		FROM
		TB_MEMBER M1, TB_MEMBER M2, TB_FOLLOW F
		WHERE M1.MEM_NO =
		F.FOLLOWING_ID
		AND M2.MEM_NO= F.FOLLOWER_ID
		AND M1.MEM_NO = ?
		AND
		M2.MEM_ID = ?
		)
		SET ACT_YN ='Y'
	</entry>

	<entry key="selectMileageCount">
		SELECT COUNT(*) COUNT
		FROM (SELECT
		H.MILEAGE_NO
		,
		H.MILEAGE_HISTORY
		, H.MILEAGE
		, P.PRODUCT_NAME
		, H.MEM_NO
		FROM
		TB_MILEAGE_HISTORY H
		JOIN TB_DTL_ORDER D ON (H.ORDER_NO = D.ORDER_NO)
		JOIN TB_PRODUCT P ON (P.PRODUCT_NO = D.PRODUCT_NO)
		WHERE H.MEM_NO = ?)
	</entry>


	<entry key="selectMileageHistory">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		FROM (
		SELECT
		H.MILEAGE_NO
		, H.MILEAGE_HISTORY
		, H.MILEAGE
		, P.PRODUCT_NAME
		, H.MEM_NO
		FROM TB_MILEAGE_HISTORY H
		JOIN TB_DTL_ORDER D ON (H.ORDER_NO =
		D.ORDER_NO)
		JOIN TB_PRODUCT P ON (P.PRODUCT_NO = D.PRODUCT_NO)
		WHERE
		H.MEM_NO = ?)
		A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>



	<entry key="selectLikeCount">
		SELECT COUNT(*) COUNT
		FROM (SELECT
		G.COM_NO
		, G.INSTA_ID
		, I.INSTA_IMG_SRC
		, G.COM_CONTENT
		FROM
		TB_LIKE L
		JOIN TB_INSTAGRAM G ON
		(G.COM_NO =
		L.COM_NO)
		JOIN TB_INSTA_IMAGE I ON (I.REF_CNO = G.COM_NO)
		WHERE L.MEM_NO
		= ?)
	</entry>

	<entry key="selectLikeList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		FROM (
		SELECT
		G.COM_NO
		, G.INSTA_ID
		, I.INSTA_IMG_SRC
		, G.COM_CONTENT
		FROM
		TB_LIKE L
		JOIN
		TB_INSTAGRAM G ON (G.COM_NO =
		L.COM_NO)
		JOIN TB_INSTA_IMAGE I ON
		(I.REF_CNO = G.COM_NO)
		WHERE L.MEM_NO
		= ?) A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>

	<entry key="deleteLike">
		DELETE FROM TB_LIKE
		WHERE MEM_NO = ?
		AND COM_NO = ?

	</entry>

	<entry key="insertLike">
		INSERT
		INTO TB_LIKE
		(LIKE_NO
		, MEM_NO
		, COM_NO)
		VALUES(SEQ_LIKE.NEXTVAL,?,?)
	</entry>


	<entry key="selectOrderHistoryCount">
		SELECT COUNT(*) COUNT
		FROM (SELECT
		O.ORDER_NO
		,
		P.PRODUCT_NAME
		, D.DTL_SIZE
		, D.DTL_QNT
		, O.ORDER_STATUS
		FROM TB_ORDER O
		JOIN TB_DTL_ORDER D ON (O.ORDER_NO = D.ORDER_NO)
		JOIN TB_PRODUCT P ON
		(D.PRODUCT_NO = P.PRODUCT_NO)
		WHERE MEM_NO = ?)
	</entry>

	<entry key="selectOrderHistoryList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		FROM (
		SELECT
		I.FILE_PATH
		, O.ORDER_NO
		, D.DTL_ORDER_NO
		, P.PRODUCT_NAME
		,
		D.DTL_SIZE
		,
		D.DTL_QNT
		, O.ORDER_STATUS
		FROM TB_ORDER O
		JOIN TB_DTL_ORDER
		D ON
		(O.ORDER_NO = D.ORDER_NO)
		JOIN TB_PRODUCT P ON (D.PRODUCT_NO =
		P.PRODUCT_NO)
		JOIN TB_PRODUCT_IMAGE I ON (P.PRODUCT_NO = I.PRODUCT_NO)
		WHERE O.MEM_NO = ?
		AND IMG_TYPE = 1
        AND D.DEL_YN = 'N'
		ORDER
   		BY O.ORDER_NO DESC)
		A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>

	<entry key="cancelOrder">
		UPDATE
        TB_ORDER
		SET ORDER_STATUS = '취소완료'
		WHERE ORDER_NO = (SELECT ORDER_NO
                            FROM TB_DTL_ORDER
                            JOIN TB_ORDER USING (ORDER_NO)
                            WHERE DTL_ORDER_NO = ?)
	</entry>

	<entry key="selectOrderHistoryCancelCount">
		SELECT COUNT(*) COUNT
		FROM (SELECT
		O.ORDER_NO
		,
		P.PRODUCT_NAME
		, D.DTL_SIZE
		, D.DTL_QNT
		, O.ORDER_STATUS
		FROM TB_ORDER O
		JOIN TB_DTL_ORDER D ON (O.ORDER_NO = D.ORDER_NO)
		JOIN TB_PRODUCT P ON
		(D.PRODUCT_NO = P.PRODUCT_NO)
		WHERE MEM_NO = ?
		AND O.ORDER_STATUS =
		'취소완료' OR O.ORDER_STATUS = '교환요청' OR O.ORDER_STATUS
		= '교환중'
		OR
		O.ORDER_STATUS = '교환완료' OR O.ORDER_STATUS = '환불요청' OR O.ORDER_STATUS
		=
		'환불중' OR O.ORDER_STATUS = '환불완료'
		)
	</entry>

	<entry key="selectOrderHistoryCancelList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
		FROM (
		SELECT
		I.FILE_PATH
		, O.ORDER_NO
		, D.DTL_ORDER_NO
		, P.PRODUCT_NAME
		,
		D.DTL_SIZE
		,
		D.DTL_QNT
		, O.ORDER_STATUS
		FROM TB_ORDER O
		JOIN TB_DTL_ORDER
		D ON
		(O.ORDER_NO = D.ORDER_NO)
		JOIN TB_PRODUCT P ON (D.PRODUCT_NO =
		P.PRODUCT_NO)
		JOIN TB_PRODUCT_IMAGE I ON (P.PRODUCT_NO = I.PRODUCT_NO)
		WHERE O.MEM_NO = ?
		AND IMG_TYPE = 1
		AND O.ORDER_STATUS = '취소완료' OR
		O.ORDER_STATUS = '교환요청' OR O.ORDER_STATUS
		= '교환중'
		OR O.ORDER_STATUS =
		'교환완료' OR O.ORDER_STATUS = '환불요청' OR O.ORDER_STATUS
		= '환불중' OR
		O.ORDER_STATUS = '환불완료'
		)
		A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>

	<entry key="selectOrderHistoryDetail">
		SELECT
		I.FILE_PATH
		, O.ORDER_NO
		, D.DTL_ORDER_NO
		, O.ORDER_DATE
		, O.RCP_NAME
		, O.RCP_PHONE
		, O.RCP_ADDRESS
		, O.RCP_ADDRESS_DTL
		, O.RCP_POST_CODE
		, P.PRODUCT_NAME
		, D.DTL_SIZE
		, D.DTL_QNT
		, O.ORDER_STATUS
		FROM TB_ORDER O
		JOIN TB_DTL_ORDER D ON (O.ORDER_NO = D.ORDER_NO)
		JOIN TB_PRODUCT P ON (D.PRODUCT_NO = P.PRODUCT_NO)
		JOIN TB_PRODUCT_IMAGE I ON (P.PRODUCT_NO = I.PRODUCT_NO)
		WHERE O.ORDER_NO = ?
		AND I.IMG_TYPE = 1
	</entry>
	
	<entry key="">
	
	</entry>

</properties>