{"version":3,"file":"bundle.js","sources":["../src/icon.js","../src/tag.js","../src/editor.js","../src/input.js","../src/wrapper.js","../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["const closeTag = (tag) => {\n    tag.dispatchEvent(new CustomEvent(\n        'removedTag',\n        {\n            bubbles: true,\n            detail: {\n                tagValue: tag.dataset.tagValue\n            }\n        }\n    ));\n    tag.remove();\n}\n\nexport const createCloseIcon = (tag) => {\n    const i = document.createElement('i');\n    i.className = 'material-symbols-outlined';\n    i.innerHTML = 'close';\n    i.addEventListener('click', () => closeTag(tag));\n\n    return i;\n};\n\n\n","import { createCloseIcon } from \"./icon\";\n\nexport const createTag = (text) => {\n    const tag = document.createElement('span');\n    tag.className = 'tg-tag';\n    tag.innerHTML = text;\n    tag.dataset[\"tagValue\"] = text;\n    tag.insertAdjacentElement(\n        'beforeend',\n        createCloseIcon(tag)\n    );\n\n    return tag;\n};\n","import { createTag } from \"./tag\";\nimport { createInput } from \"./input\";\nimport { createWrapper } from \"./wrapper\";\n\nexport const initializeEditor = (editor) => {\n    // Loads the tag list defined in the data-tags-list attribute.\n    const loadTagList = () => {\n        if(typeof editor.dataset['tagsList'] !== 'undefined'\n            && editor.dataset['tagsList'].length) {\n            return editor.dataset['tagsList'].split(',');\n        }\n        return [];\n    }\n\n    // Inserts the loaded tags into the wrapper.\n    const insertLoadedTags = () => {\n        for (const tag of tagsList) {\n            wrapper.insertAdjacentElement('beforeend', createTag(tag));\n        }\n    }\n\n    // Dispatches the updateTagsList event.\n    const dispatchUpdateTagsListEvent = () => {\n        editor.dispatchEvent(new CustomEvent(\n            'updateTagsList', \n            {\n                bubbles: true,\n                detail: {\n                    tagsList: tagsList\n                }\n            }\n        ));\n    }\n\n    // Checks whether a finish key has been pressed.\n    const isFinishKey = (key) => {\n        const finishKeys = [\n            188, // Comma\n            13   // Enter\n        ];\n        return finishKeys.includes(key);\n    }\n\n    // Extracts the tag text from input field.\n    const extractText = () => {\n        const html = input.value;\n        input.value = '';\n        return html.replace(',', '').trim();\n    }\n\n    // Inserts a new tag.\n    const insertTag = (key) => {\n        if (isFinishKey(key)) {\n            const text = extractText();\n            if (text.length) {\n                tagsList.push(text);\n                editor.dataset['tagsList'] = tagsList;\n                wrapper.insertAdjacentElement('beforeend', createTag(text));\n                dispatchUpdateTagsListEvent();\n            }\n        }\n    };\n\n    // Removes an inserted tag.\n    const removeTag = (e) => {\n        const text = e.detail.tagValue;\n        tagsList = tagsList.filter((value) => {\n            return value !== text;\n        });\n        editor.dataset['tagsList'] = tagsList;\n        dispatchUpdateTagsListEvent();\n    }\n\n    // Tag Editor initialization.\n    const input = createInput(editor.dataset);\n    const wrapper = createWrapper();\n    let tagsList = loadTagList();\n\n    editor.className = 'tg-editor';\n    editor.dataset['tagsList'] = tagsList;\n    editor.insertAdjacentElement('beforeend', input);\n    editor.insertAdjacentElement('beforeend', wrapper);\n\n    insertLoadedTags();\n    \n    input.addEventListener('keyup', (e) => insertTag(e.keyCode));\n    editor.addEventListener('removedTag', (e) => removeTag(e));\n};\n","export const createInput = (options) => {\n    const input = document.createElement('input');\n    input.className = 'tg-input';\n    input.type = \"text\";\n\n    if(typeof options['tagsPlaceholder'] !== 'undefined'\n        && options['tagsPlaceholder'].length) {\n        input.placeholder = options.tagsPlaceholder;\n    }\n\n    return input;\n};\n","export const createWrapper = () => {\n    const wrapper = document.createElement('div');\n    wrapper.className = 'tg-wrapper';\n\n    return wrapper;\n};\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { initializeEditor } from \"./editor\";\nimport \"./style.css\";\n\ndocument.querySelectorAll(\"[data-tags-editor]\").forEach(initializeEditor);\n\nwindow.__tagsEditor = {\n    initializeEditor\n};\n"],"names":["createCloseIcon","tag","i","document","createElement","className","innerHTML","addEventListener","dispatchEvent","CustomEvent","bubbles","detail","tagValue","dataset","remove","createTag","text","insertAdjacentElement","initializeEditor","editor","options","input","wrapper","dispatchUpdateTagsListEvent","tagsList","insertTag","key","includes","html","value","replace","trim","length","push","type","placeholder","tagsPlaceholder","split","_iterator","insertLoadedTags","e","keyCode","filter","css","ref","insertAt","head","getElementsByTagName","style","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","querySelectorAll","forEach","window","__tagsEditor"],"mappings":"giCAAA,IAaaA,EAAkB,SAACC,GAC5B,IAAMC,EAAIC,SAASC,cAAc,KAKjC,OAJAF,EAAEG,UAAY,4BACdH,EAAEI,UAAY,QACdJ,EAAEK,iBAAiB,QAAS,WAAA,OAjBdN,EAiB6BA,GAhBvCO,cAAc,IAAIC,YAClB,aACA,CACIC,SAAS,EACTC,OAAQ,CACJC,SAAUX,EAAIY,QAAQD,kBAIlCX,EAAIa,SAVS,IAACb,IAmBPC,GCjBEa,EAAY,SAACC,GACtB,IAAMf,EAAME,SAASC,cAAc,QASnC,OARAH,EAAII,UAAY,SAChBJ,EAAIK,UAAYU,EAChBf,EAAIY,QAAJ,SAA0BG,EAC1Bf,EAAIgB,sBACA,YACAjB,EAAgBC,IAGbA,GCREiB,EAAmB,SAACC,GAE7B,ICNwBC,EAClBC,ECAAC,EFqBAC,EAA8B,WAChCJ,EAAOX,cAAc,IAAIC,YACrB,iBACA,CACIC,SAAS,EACTC,OAAQ,CACJa,SAAUA,OAuBpBC,EAAY,SAACC,GACf,GAhBmB,CACf,IACA,IAEcC,SAYFD,GAAM,CAClB,IAAMV,GARJY,EAAOP,EAAMQ,MACnBR,EAAMQ,MAAQ,GACPD,EAAKE,QAAQ,IAAK,IAAIC,QAOrBf,EAAKgB,SACLR,EAASS,KAAKjB,GACdG,EAAON,QAAP,SAA6BW,EAC7BF,EAAQL,sBAAsB,YAAaF,EAAUC,IACrDO,KAdQ,IACVK,GA6BJP,GC1EkBD,ED0EED,EAAON,SCzE3BQ,EAAQlB,SAASC,cAAc,UAC/BC,UAAY,WAClBgB,EAAMa,KAAO,YAE4B,IAA/Bd,EAAO,iBACVA,EAAO,gBAAoBY,SAC9BX,EAAMc,YAAcf,EAAQgB,iBAGzBf,GDiEDC,IE1EAA,EAAUnB,SAASC,cAAc,QAC/BC,UAAY,aAEbiB,GFwEHE,OArEyC,IAA/BL,EAAON,QAAP,UACHM,EAAON,QAAP,SAA2BmB,OACvBb,EAAON,QAAP,SAA2BwB,MAAM,KAErC,GAmEXlB,EAAOd,UAAY,YACnBc,EAAON,QAAP,SAA6BW,EAC7BL,EAAOF,sBAAsB,YAAaI,GAC1CF,EAAOF,sBAAsB,YAAaK,GAlEjB,WAAM,UACTE,GADS,IAC3B,2BAA4B,CAAA,IAAjBvB,UACPqB,EAAQL,sBAAsB,YAAaF,EAAUd,cAF9BqC,eAAAA,OAoE/BC,GAEAlB,EAAMd,iBAAiB,QAAS,SAACiC,GAAD,OAAOf,EAAUe,EAAEC,WACnDtB,EAAOZ,iBAAiB,aAAc,SAACiC,GAAD,OArB5BxB,EAqB6CwB,EArBpC7B,OAAOC,SACtBY,EAAWA,EAASkB,OAAO,SAACb,GACxB,OAAOA,IAAUb,IAErBG,EAAON,QAAP,SAA6BW,OAC7BD,IANc,IACRP,MGjEd,SAAqB2B,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbxC,SAAnB,CAEA,IAAI2C,EAAO3C,SAAS2C,MAAQ3C,SAAS4C,qBAAqB,QAAQ,GAC9DC,EAAQ7C,SAASC,cAAc,SACnC4C,EAAMd,KAAO,WAEI,QAAbW,GACEC,EAAKG,WACPH,EAAKI,aAAaF,EAAOF,EAAKG,YAKhCH,EAAKK,YAAYH,GAGfA,EAAMI,WACRJ,EAAMI,WAAWC,QAAUV,EAE3BK,EAAMG,YAAYhD,SAASmD,eAAeX,o6CCpBrCY,iBAAiB,sBAAsBC,QAAQtC,GAExDuC,OAAOC,aAAe,CAClBxC,iBAAAA"}